---
interface Props {
  title: string;
  description: string;
  stack?: string[];
  image?: string;
  hrefDemo?: string;
  hrefCode?: string;
  year?: string | number;
}

const { title, description, stack = [], image = '/favicon.svg', hrefDemo = '#', hrefCode = '#', year } = Astro.props as Props;
--- 
<article class="rounded-2xl border border-black/10 dark:border-white/10 overflow-hidden bg-white dark:bg-neutral-800 shadow-sm hover:shadow-lg transition-shadow duration-300">
  <img src={image} alt={title} class="w-full h-40 object-cover" loading="lazy" decoding="async" />
  <div class="p-4 space-y-3">
    <div class="flex items-center justify-between">
      <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100">{title}</h3> 
      {year && <span class="text-xs text-gray-500 dark:text-gray-400">{year}</span>}
    </div>
    <p class="text-sm text-gray-600 dark:text-gray-300 leading-relaxed">{description}</p>
    <div class="flex flex-wrap gap-2"> 
      {stack.map((s: string) => (
        <span class="text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 border dark:border-gray-600 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200">{s}</span>
      ))} 
    </div>
    <div class="flex gap-3 pt-2">
      <a class="text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 underline underline-offset-2 transition-colors duration-200" href={hrefDemo} target="_blank" rel="noopener">Demo</a>
      <a class="text-sm font-medium text-purple-600 dark:text-purple-400 hover:text-purple-800 dark:hover:text-purple-300 underline underline-offset-2 transition-colors duration-200" href={hrefCode} target="_blank" rel="noopener">CÃ³digo</a>
    </div>
  </div>
</article>